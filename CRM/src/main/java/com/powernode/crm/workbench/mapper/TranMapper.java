package com.powernode.crm.workbench.mapper;

import com.powernode.crm.workbench.domain.Clue;
import com.powernode.crm.workbench.domain.FunnelVO;
import com.powernode.crm.workbench.domain.Tran;

import java.util.List;
import java.util.Map;

public interface TranMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_tran
     *
     * @mbggenerated Fri Nov 03 11:55:38 CST 2023
     */
    int deleteByPrimaryKey(String id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_tran
     *
     * @mbggenerated Fri Nov 03 11:55:38 CST 2023
     */
    int insert(Tran record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_tran
     *
     * @mbggenerated Fri Nov 03 11:55:38 CST 2023
     */
    int insertSelective(Tran record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_tran
     *
     * @mbggenerated Fri Nov 03 11:55:38 CST 2023
     */
    Tran selectByPrimaryKey(String id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_tran
     *
     * @mbggenerated Fri Nov 03 11:55:38 CST 2023
     */
    int updateByPrimaryKeySelective(Tran record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_tran
     *
     * @mbggenerated Fri Nov 03 11:55:38 CST 2023
     */
    int updateByPrimaryKey(Tran record);

    /**
     * 保存创建的交易
     * @param tran
     * @return
     */
    int insertTran(Tran tran);

    /**
     *根据条件分页查询交易的列表
     * @param map
     * @return
     */
    List<Tran> selectTranByConditionForPage(Map<String,Object> map);

    /**
     * 根据条件查询交易的总条数
     * @param map
     * @return
     */
    int selectCountOfTranByCondition(Map<String,Object> map);

    /**
     * 根据id删除交易的信息
     * @param ids
     * @return
     */
    int deleteTranByIds(String[] ids);

    /**
     * 根据id查询交易
     * @param id
     * @return
     */
    Tran selectTranById(String id);

    /**
     * 更新交易
     * @param tran
     * @return
     */
    int updateTran(Tran tran);

    /**
     * 根据id查询交易的明细信息
     * @param id
     * @return
     */
    Tran selectTranForDetailById(String id);

    /**
     * 查询交易表中各个阶段的数据量
     * @return
     */
    List<FunnelVO> selectCountOfTranGroupByStage();

}
